version: '3.8'

services:
  # MongoDB Database
  mongo:
    image: mongo
    container_name: mongo
    ports:
      - "27017:27017"
    volumes:
      - mongodb-data:/data/db
    environment:
      MONGO_INITDB_ROOT_USERNAME: rootuser
      MONGO_INITDB_ROOT_PASSWORD: rootpass
    networks:
      - microservices-network
    healthcheck:
      test: ["CMD", "mongosh", "--quiet", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  # Eureka Service Registry
  eureka-service:
    build:
      context: ./eureka-service-registry
      dockerfile: Dockerfile
    container_name: eureka-service
    ports:
      - "8761:8761"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - TZ=America/La_Paz
    networks:
      - microservices-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8761/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 5

  # API Gateway
  api-gateway:
    build:
      context: ./api-gateway
      dockerfile: Dockerfile
    container_name: api-gateway
    ports:
      - "8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka-service:8761/eureka/
      - TZ=America/La_Paz
    depends_on:
      eureka-service:
        condition: service_healthy
    networks:
      - microservices-network

  # Authentication Service
  authentication-service:
    build:
      context: ./authentication-service
      dockerfile: Dockerfile
    container_name: auth-service
    ports:
      - "8082:8082"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka-service:8761/eureka/
      - SPRING_DATASOURCE_URL=jdbc:postgresql://host.docker.internal:5432/user_credential
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=postgres
      - TZ=America/La_Paz
    depends_on:
      eureka-service:
        condition: service_healthy
    networks:
      - microservices-network

  # Image Processing Service
  image-processing-service:
    build:
      context: ./image-processing-service
      dockerfile: Dockerfile
    container_name: image-processing-service
    ports:
      - "8083:8083"
    volumes:
      - ./food-images:/app/food-images
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka-service:8761/eureka/
      - SPRING_DATA_MONGODB_URI=mongodb://rootuser:rootpass@mongo:27017/macros_data?authSource=admin
      - SPRING_DATASOURCE_URL=jdbc:postgresql://host.docker.internal:5432/foodbank_data
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=postgres
      - FOOD_IMAGES_DIR=/app/food-images
      - TZ=America/La_Paz
    depends_on:
      eureka-service:
        condition: service_healthy
      mongo:
        condition: service_healthy
    networks:
      - microservices-network

  trace-nutrition-service:
    build:
      context: ./trace-nutrition-service
      dockerfile: Dockerfile
    container_name: nutrition-service
    ports:
      - "8084:8084"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka-service:8761/eureka/
      - SPRING_DATASOURCE_URL=jdbc:postgresql://host.docker.internal:5432/trace_nutrition_data
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=postgres
      - TZ=America/La_Paz
    depends_on:
      eureka-service:
        condition: service_healthy
    networks:
      - microservices-network

networks:
  microservices-network:
    driver: bridge
  mongo-network:
    driver: bridge  # Ensure mongo-network is created within this compose file

volumes:
  mongodb-data: {}
  food-images:
